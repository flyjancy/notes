{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Pastglory Docs Note List mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-pastglory-docs","text":"","title":"Welcome to Pastglory Docs"},{"location":"#note-list","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Note List"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/pastglory/","text":"","title":"Pastglory"},{"location":"digital/common_cells/","text":"","title":"Common Cells"},{"location":"dl/torch/","text":"","title":"PyTorch"},{"location":"tools/verilog_on_mac/","text":"Verilog on MacOS \u51c6\u5907 \u4e3a\u4e86\u5728macOS\u4e0a\u5b8c\u6210\u7b80\u5355\u7684Verilog\u4eff\u771f\u53ca\u7efc\u5408\uff0c\u9996\u5148\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5185\u5bb9: iverilog Scansion yosys graphviz \u5176\u4e2diverilog\uff0cyosys\u548cgraphviz\u53ef\u4ee5\u901a\u8fc7Homebrew\u5b89\u88c5\uff0cScansion\u53ef\u4ee5\u5728 \u5176\u5b98\u7f51 \u4e0b\u8f7d\u5e76\u5b89\u88c5\u3002 \u4eff\u771f\u6d41\u7a0b iverilog\u548cScansion\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u901a\u8fc7Makefile\u811a\u672c\u5316\u4eff\u771f\u6d41\u7a0b\u3002 Makefile\u793a\u4f8b\u811a\u672c\u5982\u4e0b: RC=\"Adder32_1\" TB =\"Adder32_1_tb\" all: iverilog -o wave $(SRC).v $(TB).v vvp -n wave open -a Scansion wave.vcd \u4e3a\u4e86\u751f\u6210\u6ce2\u5f62\uff0c\u9700\u8981\u5728testbench\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801: /*iverilog */ initial begin $dumpfile(\"wave.vcd\"); //\u751f\u6210\u7684vcd\u6587\u4ef6\u540d\u79f0 $dumpvars(0, led_demo_tb); //tb\u6a21\u5757\u540d\u79f0 end /*iverilog */ \u5982\u679c\u4e0d\u52a0\u8fd9\u51e0\u884civerilog\u7f16\u8bd1\u5668\u4e13\u7528\u7684\u8bed\u53e5\uff0c\u5c06\u65e0\u6cd5\u751f\u6210wave.vcd\u6ce2\u5f62\u3002 \u5b8c\u6210\u540e\uff0c\u5728\u5de5\u7a0b\u76ee\u5f55\u4e0b\u8f93\u5165 make \u5373\u53ef\u6253\u5f00Scansion\u754c\u9762\uff0c\u4e4b\u540e\u4fbf\u53ef\u4ee5\u6dfb\u52a0\u4fe1\u53f7\u67e5\u770b\u6ce2\u5f62\u4e86\u3002 \u6ce8\uff1a\u5728\u7ec8\u7aef\u8f93\u5165 iverilog \u56de\u8f66\uff0c\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u7684\u7b80\u5355\u4ecb\u7ecd\u3002\u53e6\u5916\uff0civerilog\u8fd8\u53ef\u4ee5\u628a\u7528Verilog HDL\u7f16\u5199\u7684.v\u6587\u4ef6\u8f6c\u6362\u6210VHDL\u8bed\u8a00\u7f16\u5199\u7684.vhd\u6587\u4ef6\uff0c\u4f7f\u7528\u547d\u4ee4 iverilog -tvhdl -o test.vhd test.v \u7efc\u5408 \u9996\u5148\u7f16\u5199\u4ee5\u4e0b\u7efc\u5408\u547d\u4ee4: # read design read_verilog counter.v hierarchy -top counter # high-level synthesis proc; opt; fsm; opt; memory; opt; #techmap; opt; write_verilog synth.v \u5c06\u4e0a\u8ff0\u547d\u4ee4\u4fdd\u5b58\u4e3ashow_rtl.ys\u6587\u4ef6\uff0c\u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u547d\u4ee4\u5b8c\u6210\u7efc\u5408\u3002 yosys show_rtl.ys \u7efc\u5408\u5b8c\u6210\u540e\u4f1a\u751f\u6210synth.v\u6587\u4ef6\uff0c\u8fd9\u662f\u7efc\u5408\u540e\u7684\u7f51\u8868\u3002 \u751f\u6210dot\u6587\u4ef6: yosys -p \"prep; show -stretch -prefix counter -format dot\" counter.v \u751f\u6210png\u56fe\u7247: dot counter.dot -T png -o counter.png \u603b\u7ed3 \u57fa\u4e8e\u4ee5\u4e0a\u76f8\u5173\u5de5\u5177\uff0c\u4fbf\u53ef\u4ee5\u5728macOS\u4e0a\u5199\u4e00\u70b9\u7b80\u5355\u7684verilog\uff0c\u7528\u4e8e\u9a8c\u8bc1\u4e00\u4e9b\u5c0f\u7684idea\u8fd8\u662f\u975e\u5e38\u65b9\u4fbf\u7684\u3002","title":"Verilog on MacOS"},{"location":"tools/verilog_on_mac/#verilog-on-macos","text":"","title":"Verilog on MacOS"},{"location":"tools/verilog_on_mac/#_1","text":"\u4e3a\u4e86\u5728macOS\u4e0a\u5b8c\u6210\u7b80\u5355\u7684Verilog\u4eff\u771f\u53ca\u7efc\u5408\uff0c\u9996\u5148\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5185\u5bb9: iverilog Scansion yosys graphviz \u5176\u4e2diverilog\uff0cyosys\u548cgraphviz\u53ef\u4ee5\u901a\u8fc7Homebrew\u5b89\u88c5\uff0cScansion\u53ef\u4ee5\u5728 \u5176\u5b98\u7f51 \u4e0b\u8f7d\u5e76\u5b89\u88c5\u3002","title":"\u51c6\u5907"},{"location":"tools/verilog_on_mac/#_2","text":"iverilog\u548cScansion\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u901a\u8fc7Makefile\u811a\u672c\u5316\u4eff\u771f\u6d41\u7a0b\u3002 Makefile\u793a\u4f8b\u811a\u672c\u5982\u4e0b: RC=\"Adder32_1\" TB =\"Adder32_1_tb\" all: iverilog -o wave $(SRC).v $(TB).v vvp -n wave open -a Scansion wave.vcd \u4e3a\u4e86\u751f\u6210\u6ce2\u5f62\uff0c\u9700\u8981\u5728testbench\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801: /*iverilog */ initial begin $dumpfile(\"wave.vcd\"); //\u751f\u6210\u7684vcd\u6587\u4ef6\u540d\u79f0 $dumpvars(0, led_demo_tb); //tb\u6a21\u5757\u540d\u79f0 end /*iverilog */ \u5982\u679c\u4e0d\u52a0\u8fd9\u51e0\u884civerilog\u7f16\u8bd1\u5668\u4e13\u7528\u7684\u8bed\u53e5\uff0c\u5c06\u65e0\u6cd5\u751f\u6210wave.vcd\u6ce2\u5f62\u3002 \u5b8c\u6210\u540e\uff0c\u5728\u5de5\u7a0b\u76ee\u5f55\u4e0b\u8f93\u5165 make \u5373\u53ef\u6253\u5f00Scansion\u754c\u9762\uff0c\u4e4b\u540e\u4fbf\u53ef\u4ee5\u6dfb\u52a0\u4fe1\u53f7\u67e5\u770b\u6ce2\u5f62\u4e86\u3002 \u6ce8\uff1a\u5728\u7ec8\u7aef\u8f93\u5165 iverilog \u56de\u8f66\uff0c\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u7684\u7b80\u5355\u4ecb\u7ecd\u3002\u53e6\u5916\uff0civerilog\u8fd8\u53ef\u4ee5\u628a\u7528Verilog HDL\u7f16\u5199\u7684.v\u6587\u4ef6\u8f6c\u6362\u6210VHDL\u8bed\u8a00\u7f16\u5199\u7684.vhd\u6587\u4ef6\uff0c\u4f7f\u7528\u547d\u4ee4 iverilog -tvhdl -o test.vhd test.v","title":"\u4eff\u771f\u6d41\u7a0b"},{"location":"tools/verilog_on_mac/#_3","text":"\u9996\u5148\u7f16\u5199\u4ee5\u4e0b\u7efc\u5408\u547d\u4ee4: # read design read_verilog counter.v hierarchy -top counter # high-level synthesis proc; opt; fsm; opt; memory; opt; #techmap; opt; write_verilog synth.v \u5c06\u4e0a\u8ff0\u547d\u4ee4\u4fdd\u5b58\u4e3ashow_rtl.ys\u6587\u4ef6\uff0c\u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u547d\u4ee4\u5b8c\u6210\u7efc\u5408\u3002 yosys show_rtl.ys \u7efc\u5408\u5b8c\u6210\u540e\u4f1a\u751f\u6210synth.v\u6587\u4ef6\uff0c\u8fd9\u662f\u7efc\u5408\u540e\u7684\u7f51\u8868\u3002 \u751f\u6210dot\u6587\u4ef6: yosys -p \"prep; show -stretch -prefix counter -format dot\" counter.v \u751f\u6210png\u56fe\u7247: dot counter.dot -T png -o counter.png","title":"\u7efc\u5408"},{"location":"tools/verilog_on_mac/#_4","text":"\u57fa\u4e8e\u4ee5\u4e0a\u76f8\u5173\u5de5\u5177\uff0c\u4fbf\u53ef\u4ee5\u5728macOS\u4e0a\u5199\u4e00\u70b9\u7b80\u5355\u7684verilog\uff0c\u7528\u4e8e\u9a8c\u8bc1\u4e00\u4e9b\u5c0f\u7684idea\u8fd8\u662f\u975e\u5e38\u65b9\u4fbf\u7684\u3002","title":"\u603b\u7ed3"}]}