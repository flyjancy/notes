{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Pastglory Docs \u7b80\u4ecb Pastglory Docs\u4e3b\u8981\u5305\u542b\u6211\u7684\u4e2a\u4eba\u7b14\u8bb0, \u6d89\u53ca\u9886\u57df\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u6570\u5b57\u8bbe\u8ba1\u4e0e\u9a8c\u8bc1, \u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u7b97\u6cd5, \u5e38\u7528\u5de5\u5177\u7684\u4f7f\u7528. \u540c\u65f6\u4e5f\u6536\u5f55\u4e00\u4e9b\u6211\u8ba4\u4e3a\u5f88\u6709\u7528\u7684talk\u5185\u5bb9. \u76f8\u5173\u94fe\u63a5 GitHub: https://github.com/pastglory \u77e5\u4e4e: \u4eba\u751f\u72b6\u6001\u673a","title":"\u4e3b\u9875"},{"location":"#welcome-to-pastglory-docs","text":"","title":"Welcome to Pastglory Docs"},{"location":"#_1","text":"Pastglory Docs\u4e3b\u8981\u5305\u542b\u6211\u7684\u4e2a\u4eba\u7b14\u8bb0, \u6d89\u53ca\u9886\u57df\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u6570\u5b57\u8bbe\u8ba1\u4e0e\u9a8c\u8bc1, \u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u7b97\u6cd5, \u5e38\u7528\u5de5\u5177\u7684\u4f7f\u7528. \u540c\u65f6\u4e5f\u6536\u5f55\u4e00\u4e9b\u6211\u8ba4\u4e3a\u5f88\u6709\u7528\u7684talk\u5185\u5bb9.","title":"\u7b80\u4ecb"},{"location":"#_2","text":"GitHub: https://github.com/pastglory \u77e5\u4e4e: \u4eba\u751f\u72b6\u6001\u673a","title":"\u76f8\u5173\u94fe\u63a5"},{"location":"about/pastglory/","text":"Fengrui Liu \u4e2a\u4eba\u7b80\u4ecb UESTC\u5728\u8bfb\u7855\u58eb, \u7814\u7a76\u65b9\u5411\u4e3a\u6570\u5b57\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u9a8c\u8bc1. Publications \u6682\u65e0 \u6bd4\u8d5b\u83b7\u5956 2019\u5e74EDA\u7cbe\u82f1\u6311\u6218\u8d5b\u5168\u56fd\u4e8c\u7b49\u5956 \u7b2c\u4e09\u5c4a\u96c6\u6210\u7535\u8def\u521b\u65b0\u521b\u4e1a\u5927\u8d5b\u897f\u5357\u8d5b\u533a\u4e8c\u7b49\u5956 2018\u5e74ACM-ICPC\u4e9a\u6d32\u533a\u57df\u8d5b\u5317\u4eac\u7ad9\u94dc\u5956 \u6280\u80fd \u7f16\u7a0b\u8bed\u8a00: C/C++, Python \u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00: Verilog/VHDL \u5199\u4f5c: Latex, Word/Excel/PowerPoint \u7248\u672c\u7ba1\u7406\u5de5\u5177: Git \u82f1\u8bed: CET4(590), CET6(548)","title":"Pastglory"},{"location":"about/pastglory/#fengrui-liu","text":"","title":"Fengrui Liu"},{"location":"about/pastglory/#_1","text":"UESTC\u5728\u8bfb\u7855\u58eb, \u7814\u7a76\u65b9\u5411\u4e3a\u6570\u5b57\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u9a8c\u8bc1.","title":"\u4e2a\u4eba\u7b80\u4ecb"},{"location":"about/pastglory/#publications","text":"\u6682\u65e0","title":"Publications"},{"location":"about/pastglory/#_2","text":"2019\u5e74EDA\u7cbe\u82f1\u6311\u6218\u8d5b\u5168\u56fd\u4e8c\u7b49\u5956 \u7b2c\u4e09\u5c4a\u96c6\u6210\u7535\u8def\u521b\u65b0\u521b\u4e1a\u5927\u8d5b\u897f\u5357\u8d5b\u533a\u4e8c\u7b49\u5956 2018\u5e74ACM-ICPC\u4e9a\u6d32\u533a\u57df\u8d5b\u5317\u4eac\u7ad9\u94dc\u5956","title":"\u6bd4\u8d5b\u83b7\u5956"},{"location":"about/pastglory/#_3","text":"\u7f16\u7a0b\u8bed\u8a00: C/C++, Python \u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00: Verilog/VHDL \u5199\u4f5c: Latex, Word/Excel/PowerPoint \u7248\u672c\u7ba1\u7406\u5de5\u5177: Git \u82f1\u8bed: CET4(590), CET6(548)","title":"\u6280\u80fd"},{"location":"digital/common_cells/","text":"\u901a\u7528\u6a21\u5757","title":"\u901a\u7528\u6a21\u5757"},{"location":"digital/common_cells/#_1","text":"","title":"\u901a\u7528\u6a21\u5757"},{"location":"pa/python/","text":"Python Notes \u57fa\u7840\u8bed\u6cd5 # input and output name = input() print(name) aaa aaa # logic print(True and False) print(True or False) print(not True) False True False str() \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684string\u683c\u5f0f len() \u8ba1\u7b97\u4e00\u4e2astring\u5305\u542b\u591a\u5c11\u4e2a\u5b57\u7b26 int() \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684\u6574\u6570\u683c\u5f0f a = 77 b = str(a) c = int(b) print(len(b)) print(a == c) 2 True list \u662fPython\u5185\u7f6e\u7684\u4e00\u79cd\u6570\u636e\u7c7b\u578b, \u662f\u4e00\u79cd\u6709\u5e8f\u7684\u96c6\u5408, \u53ef\u4ee5\u968f\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u5143\u7d20 names = ['a', 'b', 'c'] print(names) print(names[0]) print(names[1]) print(names[2]) print(names[-1]) # get the last ['a', 'b', 'c'] a b c c # use pop() or pop(i) to delete # pop() delete the last names.pop() print(names) # use append() or insert(i, str) to add # append() add the last names.append('c') print(names) names.insert(1, 'd') print(names) ['a', 'b'] ['a', 'b', 'c'] ['a', 'd', 'b', 'c'] tuple \u662f\u53e6\u4e00\u79cd\u6709\u5e8f\u5217\u8868, \u53ef\u4ee5\u7406\u89e3\u4e3a\u521d\u59cb\u5316\u540e\u4e0d\u53ef\u4fee\u6539\u7684 list t0 = (1, 2) t_empty = () # if tuple only contains one element, use ',' t1 = (1) t2 = (1,) print(t0) print(t_empty) print(t1) print(t2) (1, 2) () 1 (1,) \u6761\u4ef6\u5224\u65ad\u548c\u5faa\u73af, \u6ce8\u610fpython\u7528\u7f29\u8fdb\u786e\u5b9a\u4ee3\u7801\u5757\u7684\u89c4\u5b9a age = 20 if age > 18: print('adult') elif age >= 6: print('teenager') else: print('kid') adult sum1 = 0 for i in range(100): sum1 = sum1 + i print(sum1) sum2 = 0 n = 99 while n > 0: sum2 = sum2 + n n = n - 1 if n == 50: break print(sum2) 4950 3675 Python\u4e2d\u5185\u7f6e\u5bf9dict\u7684\u652f\u6301, dict\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u4e00\u822c\u79f0\u4f5cmap, \u4f7f\u7528key-value\u952e\u503c\u5bf9\u5b58\u50a8, dict\u4e2d\u7684key\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61. \u7528 in \u5224\u65ad\u4e00\u4e2akey\u662f\u5426\u5728dict\u4e2d \u7528 get(key) \u65b9\u6cd5\u83b7\u5f97\u67d0key\u5bf9\u5e94\u7684value \u7528 pop(key) \u65b9\u6cd5\u5220\u9664\u4e00\u4e2akey\u53ca\u5176\u5bf9\u5e94\u7684value \u7528\u8d4b\u503c\u7684\u65b9\u6cd5\u76f4\u63a5\u5c06key-value\u5bf9\u653e\u5165dict d = {'Micheal': 95, 'Bob': 75, 'Tracy': 85} print(d['Micheal']) if 'Micheal' in d: print(True) print(d.get('Bob')) d['Fancy'] = 100 print(d) 95 True 75 {'Micheal': 95, 'Bob': 75, 'Tracy': 85, 'Fancy': 100} Python\u4e2d\u7684\u51fd\u6570\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u547d\u4ee4\u884c\u4e2d\u901a\u8fc7 help(function_name) \u67e5\u770b\u7528\u6cd5 \u8c03\u7528\u51fd\u6570\u548cC/C++\u4e2d\u65e0\u5f02, \u6ce8\u610f\u4e00\u4e9b\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u51fd\u6570 print(int('123')) print(str(1.23)) print(bool(1)) print(bool('')) 123 1.23 True False Python\u4e2d\u4f7f\u7528 def \u8bed\u53e5\u5b9a\u4e49\u51fd\u6570, \u8fd4\u56de\u503c\u7528 return \u8bed\u53e5\u8fd4\u56de. \u5047\u8bbe\u5982\u4e0b\u4f8b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570, \u5982\u679c\u8be5\u51fd\u6570\u4fdd\u5b58\u4e3a\u4e86\u4e00\u4e2afunc.py\u6587\u4ef6, \u5728\u53e6\u4e00\u4e2a.py\u6587\u4ef6\u4e2d\u8981\u8c03\u7528my_function\u51fd\u6570\u5219\u9700\u8981\u8bed\u53e5 from func import my_function \u6765\u5bfc\u5165 my_function() \u51fd\u6570. \u7a7a\u51fd\u6570\u53ef\u4ee5\u7528pass\u8bed\u53e5, pass\u53ef\u4ee5\u7528\u4f5c\u5360\u4f4d\u7b26, \u5728\u6ca1\u60f3\u597d\u600e\u4e48\u5199\u51fd\u6570\u4ee3\u7801\u65f6\u53ef\u4ee5\u5148\u653e\u4e00\u4e2apass\u8ba9\u4ee3\u7801\u8dd1\u8d77\u6765. def my_function(x): if (x >= 0): return True else: return False my_function(1) True Python\u7684\u51fd\u6570\u8fd4\u56de\u503c\u662f\u6709\u591a\u4e2a\u7684\u60c5\u51b5\u4e0b\u5b9e\u9645\u4e0a\u662f\u8fd4\u56de\u4e86\u4e00\u4e2atuple, \u800c\u591a\u4e2a\u53d8\u91cf\u53ef\u4ee5\u540c\u65f6\u63a5\u6536\u4e00\u4e2atuple, \u6309\u4f4d\u7f6e\u8d4b\u5bf9\u5e94\u7684\u503c, \u5199\u8d77\u6765\u5f88\u65b9\u4fbf. import math def move(x, y, step, angle = 0): nx = x + step * math.cos(angle) ny = y - step * math.sin(angle) return nx, ny x, y = move(100, 100, 60, math.pi/6) print(x, y) r = move(100, 100, 60, math.pi/6) print(r) 151.96152422706632 70.0 (151.96152422706632, 70.0) \u5b9a\u4e49\u51fd\u6570\u53c2\u6570\u65f6\u8bb0\u4f4f\u4e00\u70b9\uff1a\u9ed8\u8ba4\u53c2\u6570\u5fc5\u987b\u6307\u5411\u4e0d\u53d8\u5bf9\u8c61. \u53ef\u53d8\u53c2\u6570\u5b9a\u4e49\u65f6\u4f7f\u7528 def my_function(*numbers) \u8bed\u53e5, \u5728\u51fd\u6570\u5185\u90e8, \u53c2\u6570numbers\u63a5\u6536\u5230\u7684\u662f\u4e00\u4e2atuple, \u540c\u6837, \u518d\u8c03\u7528\u65f6\u4f7f\u7528 my_function(*numbers) \u5c06list\u6216tuple\u7684\u5143\u7d20\u53d8\u6210\u53ef\u53d8\u53c2\u6570\u4f20\u8fdb\u53bb, \u52a0*\u8868\u793a\u8fd9\u4e2alist\u6216tuple\u7684\u6240\u6709\u5143\u7d20\u4f5c\u4e3a\u53ef\u53d8\u53c2\u6570\u4f20\u8fdb\u53bb. \u9012\u5f52\u51fd\u6570\u548cC/C++\u7c7b\u4f3c. Python\u4e2d\u7684\u7d22\u5f15\u64cd\u4f5c\u548cMatlab\u7c7b\u4f3c \u53d6\u4e00\u4e2alist\u6216tuple\u4e2d\u4e0b\u6807a\u5230b\u7684\u5143\u7d20\u53ef\u4ee5\u7528 L[0:3] , \u8868\u793a\u4ece\u7d22\u5f150\u5f00\u59cb\u53d6\u76f4\u5230\u7d22\u5f153, \u4f46\u4e0d\u5305\u62ec\u7d22\u5f153. \u5982\u679c\u7b2c\u4e00\u4e2a\u7d22\u5f15\u662f0, \u8fd8\u53ef\u4ee5\u7701\u7565. \u7528\u8d1f\u53f7\u8868\u793a\u5012\u6570. L = list(range(50)) print(L) print(L[0:15]) print(L[1:15]) print(L[:15]) print(L[15:]) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49] List Comprehensions \u901a\u8fc7\u5217\u8868\u751f\u6210\u5f0f\u53ef\u4ee5\u5199\u51fa\u975e\u5e38\u7b80\u6d01\u7684\u4ee3\u7801, \u5728\u5217\u8868\u540e\u7528for\u548cif\u9ad8\u6548\u5730\u751f\u6210\u5217\u8868. \u9700\u8981\u6ce8\u610f\u7684\u662f, \u8ddf\u5728for\u4e4b\u540e\u7684if\u662f\u4e00\u4e2a\u7b5b\u9009\u6761\u4ef6, \u4e0d\u80fd\u5e26else \u5728for\u4e4b\u524d\u7684if\u5219\u662f\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6, \u9700\u8981\u52a0\u4e0aelse\u4ee5\u8ba1\u7b97\u51fa\u4e00\u4e2a\u7ed3\u679c print([x * x for x in range(1, 11)]) print([x * x for x in range(1, 11) if x % 2 == 1]) [1, 4, 9, 16, 25, 36, 49, 64, 81, 100] [1, 9, 25, 49, 81] generator, Python\u4e2d\u4e00\u79cd\u4e00\u8fb9\u5faa\u73af\u4e00\u904d\u8ba1\u7b97\u7684\u673a\u5236, \u4e0e\u5217\u8868\u751f\u6210\u5668\u7c7b\u4f3c, \u4f46\u662f\u4e0d\u5fc5\u521b\u5efa\u5b8c\u6574\u7684list, \u4ece\u800c\u8282\u7ea6\u4e86\u5185\u5b58. \u6709\u4e24\u79cd\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2agenerator\uff1a 1. \u628a\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\u7684 [] \u6539\u4e3a () 2. \u51fd\u6570\u5b9e\u73b0 # \u521b\u5efa\u4e86\u4e00\u4e2agenerator\u540e, \u57fa\u672c\u4e0a\u6c38\u8fdc\u4e0d\u4f1a\u8c03\u7528next(), \u800c\u662f\u901a\u8fc7for\u5faa\u73af\u6765\u8fed\u4ee3 g = (x * x for x in range(10)) print(g) for n in g: print(n) <generator object <genexpr> at 0x7fb88b6ed7b0> 0 1 4 9 16 25 36 49 64 81 def fib(max): n, a, b = 0, 0, 1 while n < max: print(b) a, b, = b, a + b n = n + 1 return 'done' print(fib(6)) 1 1 2 3 5 8 done \u8be5\u51fd\u6570\u63cf\u8ff0\u4e86\u6590\u6ce2\u62c9\u5951\u6570\u5217\u7684\u63a8\u7b97\u89c4\u5219, \u8981\u5c06fib\u51fd\u6570\u53d8\u6210generator, \u53ea\u9700\u8981\u628a print (b) \u6539\u6210 yield b \u5c31\u53ef\u4ee5\u4e86. \u6b64\u65f6fib\u4e0d\u662f\u666e\u901a\u51fd\u6570\u800c\u662fgenerator. \u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u9047\u5230 yield \u5c31\u4e2d\u65ad, \u4e0b\u6b21\u53c8\u4ece\u8be5\u5904\u7ee7\u7eed\u6267\u884c. \u540c\u6837\u5730, \u628a\u51fd\u6570\u6539\u6210generator\u540e, \u6211\u4eec\u57fa\u672c\u4e0a\u4ece\u6765\u4e0d\u4f1a\u7528next()\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u8fd4\u56de\u503c, \u800c\u662f\u76f4\u63a5\u4f7f\u7528for\u5faa\u73af\u6765\u8fed\u4ee3. def fib(max): n, a, b = 0, 0, 1 while n < max: yield b a, b, = b, a + b n = n + 1 return 'done' for n in fib(6): print(n) 1 1 2 3 5 8 \u53ef\u4ee5\u88ab next() \u51fd\u6570\u8c03\u7528\u5e76\u4e0d\u65ad\u8fd4\u56de\u4e0b\u4e00\u4e2a\u503c\u7684\u5bf9\u8c61\u79f0\u4e3a\u8fed\u4ee3\u5668\uff1a Iterator \u53ef\u4ee5\u7528 isinstance() \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u4e3a Iterator \u5bf9\u8c61 \u751f\u6210\u5668\u90fd\u662f Iterator \u5bf9\u8c61, \u4f46 list , dict , str \u867d\u7136\u662f Iterable , \u5374\u4e0d\u662f Iterator , \u53ef\u4ee5\u4f7f\u7528 iter() \u51fd\u6570\u5c06 list , dict , str \u7b49 Iterable \u53d8\u6210 Iterator Python\u7684 Iterator \u5bf9\u8c61\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6570\u636e\u6d41, Iterator \u5bf9\u8c61\u53ef\u4ee5\u88ab next() \u51fd\u6570\u8c03\u7528\u5e76\u4e0d\u65ad\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e, \u76f4\u5230\u6ca1\u6709\u6570\u636e\u65f6\u629b\u51fa StopIteration \u9519\u8bef. \u53ef\u4ee5\u628a\u8fd9\u4e2a\u6570\u636e\u6d41\u770b\u505a\u662f\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217, \u4f46\u6211\u4eec\u5374\u4e0d\u80fd\u63d0\u524d\u77e5\u9053\u5e8f\u5217\u7684\u957f\u5ea6, \u53ea\u80fd\u4e0d\u65ad\u901a\u8fc7 next() \u51fd\u6570\u5b9e\u73b0\u6309\u9700\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u6570\u636e, \u6240\u4ee5 Iterator \u7684\u8ba1\u7b97\u662f\u60f0\u6027\u7684, \u53ea\u6709\u5728\u9700\u8981\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u65f6\u5b83\u624d\u4f1a\u8ba1\u7b97. Iterator \u751a\u81f3\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u65e0\u9650\u5927\u7684\u6570\u636e\u6d41, \u4f8b\u5982\u5168\u4f53\u81ea\u7136\u6570. \u800c\u4f7f\u7528 list \u662f\u6c38\u8fdc\u4e0d\u53ef\u80fd\u5b58\u50a8\u5168\u4f53\u81ea\u7136\u6570\u7684. Python\u4e2d\u7684 for \u5faa\u73af\u672c\u8d28\u4e0a\u5c31\u662f\u901a\u8fc7\u4e0d\u65ad\u8c03\u7528 next() \u51fd\u6570\u5b9e\u73b0\u7684. \u9762\u5411\u5bf9\u8c61\u5165\u95e8 \u9762\u5411\u5bf9\u8c61\u4e2d\u6700\u91cd\u8981\u7684\u6982\u5ff5\u5c31\u662fclass\u548cinstance, instance\u662f\u6839\u636eclass\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61, \u6bcf\u4e2a\u5bf9\u8c61\u62e5\u6709\u76f8\u540c\u7684\u65b9\u6cd5, \u4f46\u5404\u81ea\u7684\u6570\u636e\u53ef\u80fd\u4e0d\u540c. \u4e0b\u9762\u7684\u4f8b\u5b50\u91cc, \u62ec\u53f7\u5185\u8868\u793a\u8be5\u7c7b\u662f\u4ece\u54ea\u4e2a\u7c7b\u7ee7\u627f\u4e0b\u6765\u7684, \u5982\u679c\u6ca1\u6709\u5408\u9002\u7684\u7ee7\u627f\u7c7b, \u5c31\u4f7f\u7528 object \u7c7b, \u5b9a\u4e49\u597d\u4e4b\u540e\u5c31\u53ef\u4ee5\u521b\u5efa\u5b9e\u4f8b. \u7531\u4e8e\u7c7b\u8d77\u5230\u6a21\u677f\u7684\u4f5c\u7528, \u56e0\u6b64\u521b\u5efa\u5b9e\u4f8b\u65f6\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u7279\u6b8a\u7684 __init__ \u65b9\u6cd5, \u628a\u4e00\u4e9b\u5fc5\u987b\u7ed1\u5b9a\u7684\u5c5e\u6027\u5f3a\u5236\u586b\u5199\u8fdb\u53bb. __init__ \u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u662f self , self \u6307\u5411\u521b\u5efa\u7684\u5b9e\u4f8b\u672c\u8eab, \u5728 __init__ \u5185\u90e8\u5c31\u53ef\u4ee5\u628a\u5404\u79cd\u5c5e\u6027\u7ed1\u5b9a\u5230\u5b9e\u529b\u672c\u8eab. \u5b9a\u4e49\u5176\u4ed6\u7684\u65b9\u6cd5print_s. class Student(object): def __init__(self, name, score): self.name = name self.score = score def print_s(self): print('%s: %s' % (self.name, self.score)) bart = Student('Bart', 90) bart.print_s() Bart: 90 \u5982\u679c\u8981\u8ba9\u5185\u90e8\u5c5e\u6027\u4e0d\u88ab\u5916\u90e8\u8bbf\u95ee, \u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u79f0\u524d\u52a0\u4e24\u4e2a\u4e0b\u5212\u7ebf. class Student1(object): def __init__(self, name, score): self.__name = name self.__score = score alan = Student1('alan', 60) alan.__name --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) <ipython-input-12-e8a3e1805d04> in <module> 6 7 alan = Student1('alan', 60) ----> 8 alan.__name AttributeError: 'Student1' object has no attribute '__name' \u5982\u679c\u5916\u90e8\u4ee3\u7801\u4e00\u5b9a\u8981\u83b7\u53d6\u4e0d\u88ab\u5916\u90e8\u8bbf\u95ee\u7684\u5c5e\u6027, \u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a get_name \u548c get_score \u8fd9\u6837\u7684\u65b9\u6cd5. \u6709\u4e9b\u65f6\u5019, \u4f60\u4f1a\u770b\u5230\u4ee5\u4e00\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u540d, \u6bd4\u5982 _name , \u8fd9\u6837\u7684\u5b9e\u4f8b\u53d8\u91cf\u5916\u90e8\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684, \u4f46\u662f, \u6309\u7167\u7ea6\u5b9a\u4fd7\u6210\u7684\u89c4\u5b9a, \u5f53\u4f60\u770b\u5230\u8fd9\u6837\u7684\u53d8\u91cf\u65f6, \u610f\u601d\u5c31\u662f, \u201c\u867d\u7136\u6211\u53ef\u4ee5\u88ab\u8bbf\u95ee, \u4f46\u662f, \u8bf7\u628a\u6211\u89c6\u4e3a\u79c1\u6709\u53d8\u91cf, \u4e0d\u8981\u968f\u610f\u8bbf\u95ee\u201d. \u7ee7\u627f\u7684\u6982\u5ff5\u4e0d\u7b97\u590d\u6742, \u4e3b\u8981\u5c31\u662f\u5b50\u7c7b\u81ea\u52a8\u62e5\u6709\u7236\u7c7b\u7684\u65b9\u6cd5, \u5e76\u4e14\u7ee7\u627f\u6709\u4e00\u4e2a\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u591a\u6001. \u8981\u5224\u65adclass\u7684\u7c7b\u578b, \u53ef\u4ee5\u4f7f\u7528 isinstance() \u65b9\u6cd5. isinstance(bart, Student) True","title":"Python\u7b14\u8bb0"},{"location":"pa/python/#python-notes","text":"","title":"Python Notes"},{"location":"pa/python/#_1","text":"# input and output name = input() print(name) aaa aaa # logic print(True and False) print(True or False) print(not True) False True False str() \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684string\u683c\u5f0f len() \u8ba1\u7b97\u4e00\u4e2astring\u5305\u542b\u591a\u5c11\u4e2a\u5b57\u7b26 int() \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684\u6574\u6570\u683c\u5f0f a = 77 b = str(a) c = int(b) print(len(b)) print(a == c) 2 True list \u662fPython\u5185\u7f6e\u7684\u4e00\u79cd\u6570\u636e\u7c7b\u578b, \u662f\u4e00\u79cd\u6709\u5e8f\u7684\u96c6\u5408, \u53ef\u4ee5\u968f\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u5143\u7d20 names = ['a', 'b', 'c'] print(names) print(names[0]) print(names[1]) print(names[2]) print(names[-1]) # get the last ['a', 'b', 'c'] a b c c # use pop() or pop(i) to delete # pop() delete the last names.pop() print(names) # use append() or insert(i, str) to add # append() add the last names.append('c') print(names) names.insert(1, 'd') print(names) ['a', 'b'] ['a', 'b', 'c'] ['a', 'd', 'b', 'c'] tuple \u662f\u53e6\u4e00\u79cd\u6709\u5e8f\u5217\u8868, \u53ef\u4ee5\u7406\u89e3\u4e3a\u521d\u59cb\u5316\u540e\u4e0d\u53ef\u4fee\u6539\u7684 list t0 = (1, 2) t_empty = () # if tuple only contains one element, use ',' t1 = (1) t2 = (1,) print(t0) print(t_empty) print(t1) print(t2) (1, 2) () 1 (1,) \u6761\u4ef6\u5224\u65ad\u548c\u5faa\u73af, \u6ce8\u610fpython\u7528\u7f29\u8fdb\u786e\u5b9a\u4ee3\u7801\u5757\u7684\u89c4\u5b9a age = 20 if age > 18: print('adult') elif age >= 6: print('teenager') else: print('kid') adult sum1 = 0 for i in range(100): sum1 = sum1 + i print(sum1) sum2 = 0 n = 99 while n > 0: sum2 = sum2 + n n = n - 1 if n == 50: break print(sum2) 4950 3675 Python\u4e2d\u5185\u7f6e\u5bf9dict\u7684\u652f\u6301, dict\u5728\u5176\u4ed6\u8bed\u8a00\u4e2d\u4e00\u822c\u79f0\u4f5cmap, \u4f7f\u7528key-value\u952e\u503c\u5bf9\u5b58\u50a8, dict\u4e2d\u7684key\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61. \u7528 in \u5224\u65ad\u4e00\u4e2akey\u662f\u5426\u5728dict\u4e2d \u7528 get(key) \u65b9\u6cd5\u83b7\u5f97\u67d0key\u5bf9\u5e94\u7684value \u7528 pop(key) \u65b9\u6cd5\u5220\u9664\u4e00\u4e2akey\u53ca\u5176\u5bf9\u5e94\u7684value \u7528\u8d4b\u503c\u7684\u65b9\u6cd5\u76f4\u63a5\u5c06key-value\u5bf9\u653e\u5165dict d = {'Micheal': 95, 'Bob': 75, 'Tracy': 85} print(d['Micheal']) if 'Micheal' in d: print(True) print(d.get('Bob')) d['Fancy'] = 100 print(d) 95 True 75 {'Micheal': 95, 'Bob': 75, 'Tracy': 85, 'Fancy': 100} Python\u4e2d\u7684\u51fd\u6570\u53ef\u4ee5\u5728\u4ea4\u4e92\u5f0f\u547d\u4ee4\u884c\u4e2d\u901a\u8fc7 help(function_name) \u67e5\u770b\u7528\u6cd5 \u8c03\u7528\u51fd\u6570\u548cC/C++\u4e2d\u65e0\u5f02, \u6ce8\u610f\u4e00\u4e9b\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u51fd\u6570 print(int('123')) print(str(1.23)) print(bool(1)) print(bool('')) 123 1.23 True False Python\u4e2d\u4f7f\u7528 def \u8bed\u53e5\u5b9a\u4e49\u51fd\u6570, \u8fd4\u56de\u503c\u7528 return \u8bed\u53e5\u8fd4\u56de. \u5047\u8bbe\u5982\u4e0b\u4f8b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570, \u5982\u679c\u8be5\u51fd\u6570\u4fdd\u5b58\u4e3a\u4e86\u4e00\u4e2afunc.py\u6587\u4ef6, \u5728\u53e6\u4e00\u4e2a.py\u6587\u4ef6\u4e2d\u8981\u8c03\u7528my_function\u51fd\u6570\u5219\u9700\u8981\u8bed\u53e5 from func import my_function \u6765\u5bfc\u5165 my_function() \u51fd\u6570. \u7a7a\u51fd\u6570\u53ef\u4ee5\u7528pass\u8bed\u53e5, pass\u53ef\u4ee5\u7528\u4f5c\u5360\u4f4d\u7b26, \u5728\u6ca1\u60f3\u597d\u600e\u4e48\u5199\u51fd\u6570\u4ee3\u7801\u65f6\u53ef\u4ee5\u5148\u653e\u4e00\u4e2apass\u8ba9\u4ee3\u7801\u8dd1\u8d77\u6765. def my_function(x): if (x >= 0): return True else: return False my_function(1) True Python\u7684\u51fd\u6570\u8fd4\u56de\u503c\u662f\u6709\u591a\u4e2a\u7684\u60c5\u51b5\u4e0b\u5b9e\u9645\u4e0a\u662f\u8fd4\u56de\u4e86\u4e00\u4e2atuple, \u800c\u591a\u4e2a\u53d8\u91cf\u53ef\u4ee5\u540c\u65f6\u63a5\u6536\u4e00\u4e2atuple, \u6309\u4f4d\u7f6e\u8d4b\u5bf9\u5e94\u7684\u503c, \u5199\u8d77\u6765\u5f88\u65b9\u4fbf. import math def move(x, y, step, angle = 0): nx = x + step * math.cos(angle) ny = y - step * math.sin(angle) return nx, ny x, y = move(100, 100, 60, math.pi/6) print(x, y) r = move(100, 100, 60, math.pi/6) print(r) 151.96152422706632 70.0 (151.96152422706632, 70.0) \u5b9a\u4e49\u51fd\u6570\u53c2\u6570\u65f6\u8bb0\u4f4f\u4e00\u70b9\uff1a\u9ed8\u8ba4\u53c2\u6570\u5fc5\u987b\u6307\u5411\u4e0d\u53d8\u5bf9\u8c61. \u53ef\u53d8\u53c2\u6570\u5b9a\u4e49\u65f6\u4f7f\u7528 def my_function(*numbers) \u8bed\u53e5, \u5728\u51fd\u6570\u5185\u90e8, \u53c2\u6570numbers\u63a5\u6536\u5230\u7684\u662f\u4e00\u4e2atuple, \u540c\u6837, \u518d\u8c03\u7528\u65f6\u4f7f\u7528 my_function(*numbers) \u5c06list\u6216tuple\u7684\u5143\u7d20\u53d8\u6210\u53ef\u53d8\u53c2\u6570\u4f20\u8fdb\u53bb, \u52a0*\u8868\u793a\u8fd9\u4e2alist\u6216tuple\u7684\u6240\u6709\u5143\u7d20\u4f5c\u4e3a\u53ef\u53d8\u53c2\u6570\u4f20\u8fdb\u53bb. \u9012\u5f52\u51fd\u6570\u548cC/C++\u7c7b\u4f3c. Python\u4e2d\u7684\u7d22\u5f15\u64cd\u4f5c\u548cMatlab\u7c7b\u4f3c \u53d6\u4e00\u4e2alist\u6216tuple\u4e2d\u4e0b\u6807a\u5230b\u7684\u5143\u7d20\u53ef\u4ee5\u7528 L[0:3] , \u8868\u793a\u4ece\u7d22\u5f150\u5f00\u59cb\u53d6\u76f4\u5230\u7d22\u5f153, \u4f46\u4e0d\u5305\u62ec\u7d22\u5f153. \u5982\u679c\u7b2c\u4e00\u4e2a\u7d22\u5f15\u662f0, \u8fd8\u53ef\u4ee5\u7701\u7565. \u7528\u8d1f\u53f7\u8868\u793a\u5012\u6570. L = list(range(50)) print(L) print(L[0:15]) print(L[1:15]) print(L[:15]) print(L[15:]) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49] List Comprehensions \u901a\u8fc7\u5217\u8868\u751f\u6210\u5f0f\u53ef\u4ee5\u5199\u51fa\u975e\u5e38\u7b80\u6d01\u7684\u4ee3\u7801, \u5728\u5217\u8868\u540e\u7528for\u548cif\u9ad8\u6548\u5730\u751f\u6210\u5217\u8868. \u9700\u8981\u6ce8\u610f\u7684\u662f, \u8ddf\u5728for\u4e4b\u540e\u7684if\u662f\u4e00\u4e2a\u7b5b\u9009\u6761\u4ef6, \u4e0d\u80fd\u5e26else \u5728for\u4e4b\u524d\u7684if\u5219\u662f\u4e00\u4e2a\u5224\u65ad\u6761\u4ef6, \u9700\u8981\u52a0\u4e0aelse\u4ee5\u8ba1\u7b97\u51fa\u4e00\u4e2a\u7ed3\u679c print([x * x for x in range(1, 11)]) print([x * x for x in range(1, 11) if x % 2 == 1]) [1, 4, 9, 16, 25, 36, 49, 64, 81, 100] [1, 9, 25, 49, 81] generator, Python\u4e2d\u4e00\u79cd\u4e00\u8fb9\u5faa\u73af\u4e00\u904d\u8ba1\u7b97\u7684\u673a\u5236, \u4e0e\u5217\u8868\u751f\u6210\u5668\u7c7b\u4f3c, \u4f46\u662f\u4e0d\u5fc5\u521b\u5efa\u5b8c\u6574\u7684list, \u4ece\u800c\u8282\u7ea6\u4e86\u5185\u5b58. \u6709\u4e24\u79cd\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2agenerator\uff1a 1. \u628a\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\u7684 [] \u6539\u4e3a () 2. \u51fd\u6570\u5b9e\u73b0 # \u521b\u5efa\u4e86\u4e00\u4e2agenerator\u540e, \u57fa\u672c\u4e0a\u6c38\u8fdc\u4e0d\u4f1a\u8c03\u7528next(), \u800c\u662f\u901a\u8fc7for\u5faa\u73af\u6765\u8fed\u4ee3 g = (x * x for x in range(10)) print(g) for n in g: print(n) <generator object <genexpr> at 0x7fb88b6ed7b0> 0 1 4 9 16 25 36 49 64 81 def fib(max): n, a, b = 0, 0, 1 while n < max: print(b) a, b, = b, a + b n = n + 1 return 'done' print(fib(6)) 1 1 2 3 5 8 done \u8be5\u51fd\u6570\u63cf\u8ff0\u4e86\u6590\u6ce2\u62c9\u5951\u6570\u5217\u7684\u63a8\u7b97\u89c4\u5219, \u8981\u5c06fib\u51fd\u6570\u53d8\u6210generator, \u53ea\u9700\u8981\u628a print (b) \u6539\u6210 yield b \u5c31\u53ef\u4ee5\u4e86. \u6b64\u65f6fib\u4e0d\u662f\u666e\u901a\u51fd\u6570\u800c\u662fgenerator. \u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u9047\u5230 yield \u5c31\u4e2d\u65ad, \u4e0b\u6b21\u53c8\u4ece\u8be5\u5904\u7ee7\u7eed\u6267\u884c. \u540c\u6837\u5730, \u628a\u51fd\u6570\u6539\u6210generator\u540e, \u6211\u4eec\u57fa\u672c\u4e0a\u4ece\u6765\u4e0d\u4f1a\u7528next()\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u8fd4\u56de\u503c, \u800c\u662f\u76f4\u63a5\u4f7f\u7528for\u5faa\u73af\u6765\u8fed\u4ee3. def fib(max): n, a, b = 0, 0, 1 while n < max: yield b a, b, = b, a + b n = n + 1 return 'done' for n in fib(6): print(n) 1 1 2 3 5 8 \u53ef\u4ee5\u88ab next() \u51fd\u6570\u8c03\u7528\u5e76\u4e0d\u65ad\u8fd4\u56de\u4e0b\u4e00\u4e2a\u503c\u7684\u5bf9\u8c61\u79f0\u4e3a\u8fed\u4ee3\u5668\uff1a Iterator \u53ef\u4ee5\u7528 isinstance() \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u4e3a Iterator \u5bf9\u8c61 \u751f\u6210\u5668\u90fd\u662f Iterator \u5bf9\u8c61, \u4f46 list , dict , str \u867d\u7136\u662f Iterable , \u5374\u4e0d\u662f Iterator , \u53ef\u4ee5\u4f7f\u7528 iter() \u51fd\u6570\u5c06 list , dict , str \u7b49 Iterable \u53d8\u6210 Iterator Python\u7684 Iterator \u5bf9\u8c61\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6570\u636e\u6d41, Iterator \u5bf9\u8c61\u53ef\u4ee5\u88ab next() \u51fd\u6570\u8c03\u7528\u5e76\u4e0d\u65ad\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e, \u76f4\u5230\u6ca1\u6709\u6570\u636e\u65f6\u629b\u51fa StopIteration \u9519\u8bef. \u53ef\u4ee5\u628a\u8fd9\u4e2a\u6570\u636e\u6d41\u770b\u505a\u662f\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217, \u4f46\u6211\u4eec\u5374\u4e0d\u80fd\u63d0\u524d\u77e5\u9053\u5e8f\u5217\u7684\u957f\u5ea6, \u53ea\u80fd\u4e0d\u65ad\u901a\u8fc7 next() \u51fd\u6570\u5b9e\u73b0\u6309\u9700\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u6570\u636e, \u6240\u4ee5 Iterator \u7684\u8ba1\u7b97\u662f\u60f0\u6027\u7684, \u53ea\u6709\u5728\u9700\u8981\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u65f6\u5b83\u624d\u4f1a\u8ba1\u7b97. Iterator \u751a\u81f3\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u65e0\u9650\u5927\u7684\u6570\u636e\u6d41, \u4f8b\u5982\u5168\u4f53\u81ea\u7136\u6570. \u800c\u4f7f\u7528 list \u662f\u6c38\u8fdc\u4e0d\u53ef\u80fd\u5b58\u50a8\u5168\u4f53\u81ea\u7136\u6570\u7684. Python\u4e2d\u7684 for \u5faa\u73af\u672c\u8d28\u4e0a\u5c31\u662f\u901a\u8fc7\u4e0d\u65ad\u8c03\u7528 next() \u51fd\u6570\u5b9e\u73b0\u7684.","title":"\u57fa\u7840\u8bed\u6cd5"},{"location":"pa/python/#_2","text":"\u9762\u5411\u5bf9\u8c61\u4e2d\u6700\u91cd\u8981\u7684\u6982\u5ff5\u5c31\u662fclass\u548cinstance, instance\u662f\u6839\u636eclass\u521b\u5efa\u51fa\u6765\u7684\u5bf9\u8c61, \u6bcf\u4e2a\u5bf9\u8c61\u62e5\u6709\u76f8\u540c\u7684\u65b9\u6cd5, \u4f46\u5404\u81ea\u7684\u6570\u636e\u53ef\u80fd\u4e0d\u540c. \u4e0b\u9762\u7684\u4f8b\u5b50\u91cc, \u62ec\u53f7\u5185\u8868\u793a\u8be5\u7c7b\u662f\u4ece\u54ea\u4e2a\u7c7b\u7ee7\u627f\u4e0b\u6765\u7684, \u5982\u679c\u6ca1\u6709\u5408\u9002\u7684\u7ee7\u627f\u7c7b, \u5c31\u4f7f\u7528 object \u7c7b, \u5b9a\u4e49\u597d\u4e4b\u540e\u5c31\u53ef\u4ee5\u521b\u5efa\u5b9e\u4f8b. \u7531\u4e8e\u7c7b\u8d77\u5230\u6a21\u677f\u7684\u4f5c\u7528, \u56e0\u6b64\u521b\u5efa\u5b9e\u4f8b\u65f6\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u7279\u6b8a\u7684 __init__ \u65b9\u6cd5, \u628a\u4e00\u4e9b\u5fc5\u987b\u7ed1\u5b9a\u7684\u5c5e\u6027\u5f3a\u5236\u586b\u5199\u8fdb\u53bb. __init__ \u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6c38\u8fdc\u662f self , self \u6307\u5411\u521b\u5efa\u7684\u5b9e\u4f8b\u672c\u8eab, \u5728 __init__ \u5185\u90e8\u5c31\u53ef\u4ee5\u628a\u5404\u79cd\u5c5e\u6027\u7ed1\u5b9a\u5230\u5b9e\u529b\u672c\u8eab. \u5b9a\u4e49\u5176\u4ed6\u7684\u65b9\u6cd5print_s. class Student(object): def __init__(self, name, score): self.name = name self.score = score def print_s(self): print('%s: %s' % (self.name, self.score)) bart = Student('Bart', 90) bart.print_s() Bart: 90 \u5982\u679c\u8981\u8ba9\u5185\u90e8\u5c5e\u6027\u4e0d\u88ab\u5916\u90e8\u8bbf\u95ee, \u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u79f0\u524d\u52a0\u4e24\u4e2a\u4e0b\u5212\u7ebf. class Student1(object): def __init__(self, name, score): self.__name = name self.__score = score alan = Student1('alan', 60) alan.__name --------------------------------------------------------------------------- AttributeError Traceback (most recent call last) <ipython-input-12-e8a3e1805d04> in <module> 6 7 alan = Student1('alan', 60) ----> 8 alan.__name AttributeError: 'Student1' object has no attribute '__name' \u5982\u679c\u5916\u90e8\u4ee3\u7801\u4e00\u5b9a\u8981\u83b7\u53d6\u4e0d\u88ab\u5916\u90e8\u8bbf\u95ee\u7684\u5c5e\u6027, \u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a get_name \u548c get_score \u8fd9\u6837\u7684\u65b9\u6cd5. \u6709\u4e9b\u65f6\u5019, \u4f60\u4f1a\u770b\u5230\u4ee5\u4e00\u4e2a\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u540d, \u6bd4\u5982 _name , \u8fd9\u6837\u7684\u5b9e\u4f8b\u53d8\u91cf\u5916\u90e8\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684, \u4f46\u662f, \u6309\u7167\u7ea6\u5b9a\u4fd7\u6210\u7684\u89c4\u5b9a, \u5f53\u4f60\u770b\u5230\u8fd9\u6837\u7684\u53d8\u91cf\u65f6, \u610f\u601d\u5c31\u662f, \u201c\u867d\u7136\u6211\u53ef\u4ee5\u88ab\u8bbf\u95ee, \u4f46\u662f, \u8bf7\u628a\u6211\u89c6\u4e3a\u79c1\u6709\u53d8\u91cf, \u4e0d\u8981\u968f\u610f\u8bbf\u95ee\u201d. \u7ee7\u627f\u7684\u6982\u5ff5\u4e0d\u7b97\u590d\u6742, \u4e3b\u8981\u5c31\u662f\u5b50\u7c7b\u81ea\u52a8\u62e5\u6709\u7236\u7c7b\u7684\u65b9\u6cd5, \u5e76\u4e14\u7ee7\u627f\u6709\u4e00\u4e2a\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u591a\u6001. \u8981\u5224\u65adclass\u7684\u7c7b\u578b, \u53ef\u4ee5\u4f7f\u7528 isinstance() \u65b9\u6cd5. isinstance(bart, Student) True","title":"\u9762\u5411\u5bf9\u8c61\u5165\u95e8"},{"location":"pa/torch/","text":"PyTorch Notes This jupyter notebook contains my code when studying PyTorch. # torch edition import torch print(torch.__version__) 1.8.1+cu111 # cuda print(torch.cuda.is_available()) print(torch.cuda.device_count()) print(torch.cuda.get_device_name()) print(torch.cuda.get_device_capability(0)) True 1 GeForce GTX 1060 (6, 1)","title":"PyTorch\u7b14\u8bb0"},{"location":"pa/torch/#pytorch-notes","text":"This jupyter notebook contains my code when studying PyTorch. # torch edition import torch print(torch.__version__) 1.8.1+cu111 # cuda print(torch.cuda.is_available()) print(torch.cuda.device_count()) print(torch.cuda.get_device_name()) print(torch.cuda.get_device_capability(0)) True 1 GeForce GTX 1060 (6, 1)","title":"PyTorch Notes"},{"location":"talk/ask_question/","text":"\u63d0\u95ee\u7684\u667a\u6167 \u8fd9\u7bc7\u6587\u7ae0\u6700\u65e9\u662f\u597d\u53cbfxd\u4e8e2016\u5e74\u63a8\u8350\u7684, \u5b83\u5728\u6211\u521a\u5ff5\u5927\u5b66\u65f6\u5e2e\u52a9\u6211\u517b\u6210\u4e86\u826f\u597d\u7684\u63d0\u95ee\u4e60\u60ef, \u4e0d\u4ec5\u5982\u6b64, \u5728\u9047\u5230\u56f0\u96be\u65f6\u6211\u4e5f\u4f1a\u65f6\u4e0d\u65f6\u7ffb\u51fa\u6765\u8bfb, \u6709\u5947\u6548. \u73b0\u5728\u662f2021\u5e749\u67084\u65e5, \u5728\u8fd9\u4e2a\u975e\u5e38\u65e0\u804a\u7684\u5468\u672b, \u6211\u518d\u6b21\u7ffb\u51fa\u4e86\u5b83, \u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b, \u65b9\u4fbf\u81ea\u5df1\u67e5\u9605. \u8fd9\u7bc7\u6587\u7ae0\u7684\u539f\u94fe\u63a5\u5728\u8fd9\u91cc: \u63d0\u95ee\u7684\u667a\u6167 \u975e\u5e38\u5e86\u5e78\u80fd\u8bfb\u5230\u8fd9\u6837\u7684\u597d\u6587. \u7b80\u4ecb \u5f53\u6211\u4eec\u62cb\u51fa\u4e00\u4e2a\u6280\u672f\u95ee\u9898\u65f6, \u6700\u7ec8\u662f\u5426\u80fd\u5f97\u5230\u6709\u7528\u7684\u56de\u7b54, \u5f80\u5f80\u53d6\u51b3\u4e8e\u6211\u4eec\u6240\u63d0\u95ee\u548c\u8ffd\u95ee\u7684\u65b9\u5f0f. \u8fd9\u7bc7\u6587\u7ae0\u5c06\u6559\u4f1a\u6211\u4eec\u5982\u4f55\u63d0\u51fa\u597d\u7684\u95ee\u9898, \u66f4\u597d\u5730\u83b7\u5f97\u6211\u4eec\u60f3\u8981\u7684\u5e2e\u52a9. \u9996\u5148\u8981\u660e\u786e\u7684\u662f, \u9ad8\u624b\u90fd\u559c\u6b22\u6709\u6311\u6218\u6027\u7684\u95ee\u9898, \u6216\u8005\u80fd\u6fc0\u53d1\u4ed6\u4eec\u601d\u7ef4\u7684\u597d\u95ee\u9898. \u597d\u95ee\u9898\u662f\u6fc0\u52b1, \u662f\u539a\u793c, \u80fd\u8ba9\u4eba\u6709\u56de\u7b54\u95ee\u9898\u7684\u70ed\u60c5. \u6b63\u56e0\u5982\u6b64, \u9ad8\u624b\u4e5f\u4e0d\u4f1a\u5728\u767d\u5ad6\u515a\u8eab\u4e0a\u6d6a\u8d39\u4ed6\u4eec\u7684\u65f6\u95f4. \u8bd5\u60f3\u4e00\u4e0b, \u5982\u679c\u4f60\u662f\u4e00\u4e2a\u5927\u795e, \u4f60\u66f4\u613f\u610f\u56de\u7b54\u4ec0\u4e48\u95ee\u9898. \u5728\u63d0\u95ee\u4e4b\u524d \u5728\u51c6\u5907\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6, \u804a\u5929\u7fa4\u7ec4\u6216\u7f51\u7edc\u8bba\u575b\u63d0\u51fa\u95ee\u9898\u524d, \u8bf7\u5148\u505a\u5230\u4ee5\u4e0b\u4e8b\u60c5: \u5c1d\u8bd5\u5728\u4f60\u51c6\u5907\u63d0\u95ee\u7684\u8bba\u575b\u7684\u65e7\u6587\u7ae0\u4e2d\u641c\u7d22\u7b54\u6848. \u5c1d\u8bd5\u4e0a\u7f51\u641c\u7d22\u4ee5\u627e\u5230\u7b54\u6848. \u5c1d\u8bd5\u9605\u8bfb\u624b\u518c\u4ee5\u627e\u5230\u7b54\u6848. \u5c1d\u8bd5\u9605\u8bfb\u5e38\u89c1\u95ee\u9898\u6587\u4ef6(FAQ)\u4ee5\u627e\u5230\u7b54\u6848. \u5c1d\u8bd5\u81ea\u5df1\u68c0\u67e5\u6216\u8bd5\u9a8c\u4ee5\u627e\u5230\u7b54\u6848. \u5411\u4f60\u8eab\u8fb9\u7684\u5f3a\u8005\u670b\u53cb\u6253\u542c\u4ee5\u627e\u5230\u7b54\u6848. \u5982\u679c\u4f60\u662f\u7a0b\u5e8f\u5f00\u53d1\u8005, \u8bf7\u5c1d\u8bd5\u9605\u8bfb\u6e90\u4ee3\u7801\u4ee5\u627e\u5230\u7b54\u6848. \u5f53\u4f60\u63d0\u95ee\u65f6 \u614e\u9009\u63d0\u95ee\u7684\u8bba\u575b \u5c0f\u5fc3\u9009\u62e9\u4f60\u8981\u63d0\u95ee\u7684\u573a\u5408. \u5982\u679c\u4f60\u505a\u4e86\u4e0b\u8ff0\u7684\u4e8b\u60c5, \u4f60\u5f88\u53ef\u80fd\u88ab\u5ffd\u7565\u6389\u6216\u8005\u88ab\u770b\u4f5c\u5931\u8d25\u8005: \u5728\u4e0e\u4e3b\u9898\u4e0d\u5408\u7684\u8bba\u575b\u4e0a\u8d34\u51fa\u4f60\u7684\u95ee\u9898. \u5728\u63a2\u8ba8\u8fdb\u9636\u6280\u672f\u95ee\u9898\u7684\u8bba\u575b\u5f20\u8d34\u975e\u5e38\u521d\u7ea7\u7684\u95ee\u9898\uff1b\u53cd\u4e4b\u4ea6\u7136. \u5728\u592a\u591a\u7684\u4e0d\u540c\u65b0\u95fb\u7fa4\u7ec4\u4e0a\u91cd\u590d\u8f6c\u8d34\u540c\u6837\u7684\u95ee\u9898(cross-post). \u5411\u65e2\u975e\u719f\u4eba\u4e5f\u6ca1\u6709\u4e49\u52a1\u89e3\u51b3\u4f60\u95ee\u9898\u7684\u4eba\u53d1\u9001\u79c1\u4eba\u7535\u90ae. \u4f7f\u7528Google\u641c\u7d22, \u7136\u540e\u5728Stack Exchange\u91cc\u63d0\u95ee\u662f\u4e00\u79cd\u597d\u7684\u7b56\u7565. \u4f7f\u95ee\u9898\u5bb9\u6613\u56de\u590d \u5982\u679c\u95ee\u9898\u63cf\u8ff0\u4e0d\u6e05, \u6216\u662f\u56de\u590d\u9014\u5f84\u4e0d\u65b9\u4fbf, \u90a3\u4e48\u522b\u4eba\u901a\u5e38\u4e5f\u61d2\u5f97\u601d\u8003\u4f60\u63d0\u51fa\u7684\u95ee\u9898. \u4e3a\u4e86\u4f7f\u95ee\u9898\u66f4\u5bb9\u6613\u5f97\u5230\u56de\u590d, \u8bf7\u505a\u597d\u4ee5\u4e0b\u51e0\u70b9: \u7528\u6e05\u6670, \u6b63\u786e, \u7cbe\u51c6\u4e14\u8bed\u6cd5\u6b63\u786e\u7684\u8bed\u53e5 \u4f7f\u7528\u6613\u4e8e\u8bfb\u53d6\u4e14\u6807\u51c6\u7684\u6587\u4ef6\u683c\u5f0f\u53d1\u9001\u95ee\u9898 \u7cbe\u786e\u5730\u63cf\u8ff0\u95ee\u9898\u5e76\u8a00\u4e4b\u6709\u7269 \u8bdd\u4e0d\u5728\u591a\u800c\u5728\u7cbe \u522b\u52a8\u8f84\u58f0\u79f0\u627e\u5230 Bug \u4f4e\u58f0\u4e0b\u6c14\u4e0d\u80fd\u4ee3\u66ff\u4f60\u7684\u529f\u8bfe \u63cf\u8ff0\u95ee\u9898\u75c7\u72b6\u800c\u975e\u4f60\u7684\u731c\u6d4b \u6309\u53d1\u751f\u65f6\u95f4\u5148\u540e\u5217\u51fa\u95ee\u9898\u75c7\u72b6 \u63cf\u8ff0\u76ee\u6807\u800c\u4e0d\u662f\u8fc7\u7a0b, \u5148\u63cf\u8ff0\u76ee\u6807, \u518d\u9648\u8ff0\u9047\u5230\u95ee\u9898\u7684\u6b65\u9aa4 \u522b\u8981\u6c42\u4f7f\u7528\u79c1\u4eba\u7535\u90ae\u56de\u590d, \u8ba9\u56de\u590d\u8005\u6765\u51b3\u5b9a\u662f\u5426\u79c1\u4e0b\u56de\u590d \u6e05\u695a\u660e\u786e\u7684\u8868\u8fbe\u4f60\u7684\u95ee\u9898\u4ee5\u53ca\u9700\u6c42 \u5373\u4f7f\u4f60\u5f88\u6025\u4e5f\u4e0d\u8981\u5728\u6807\u9898\u5199\u7d27\u6025 \u89e3\u51b3\u95ee\u9898\u7684\u5e38\u7528\u7b56\u7565 STFW: Search the fucking web RTFM: Read the fucking manual RTFSC: Read the fucking source code \u5982\u4f55\u66f4\u597d\u5730\u56de\u7b54\u95ee\u9898 \u6001\u5ea6\u548c\u5584\u4e00\u70b9 . \u95ee\u9898\u5e26\u6765\u7684\u538b\u529b\u5e38\u4f7f\u4eba\u663e\u5f97\u65e0\u793c\u6216\u611a\u8822, \u5176\u5b9e\u5e76\u4e0d\u662f\u8fd9\u6837. \u5bf9\u521d\u72af\u8005\u79c1\u4e0b\u56de\u590d . \u5bf9\u90a3\u4e9b\u5766\u8bda\u72af\u9519\u4e4b\u4eba\u6ca1\u6709\u5fc5\u8981\u5f53\u4f17\u7f9e\u8fb1, \u4e00\u4e2a\u771f\u6b63\u7684\u65b0\u624b\u4e5f\u8bb8\u8fde\u600e\u4e48\u641c\u7d22\u6216\u5728\u54ea\u627e\u5e38\u89c1\u95ee\u9898\u90fd\u4e0d\u77e5\u9053. \u5982\u679c\u4f60\u4e0d\u786e\u5b9a, \u4e00\u5b9a\u8981\u8bf4\u51fa\u6765! \u4e00\u4e2a\u542c\u8d77\u6765\u6743\u5a01\u7684\u9519\u8bef\u56de\u590d\u6bd4\u6ca1\u6709\u8fd8\u8981\u7cdf, \u522b\u56e0\u4e3a\u542c\u8d77\u6765\u50cf\u4e2a\u4e13\u5bb6\u5f88\u597d\u73a9, \u5c31\u7ed9\u522b\u4eba\u4e71\u6307\u8def. \u8981\u8c26\u865a\u548c\u8bda\u5b9e, \u7ed9\u63d0\u95ee\u8005\u4e0e\u540c\u884c\u90fd\u6811\u4e2a\u597d\u699c\u6837. \u5982\u679c\u5e2e\u4e0d\u4e86\u5fd9, \u4e5f\u522b\u59a8\u788d\u4ed6. \u4e0d\u8981\u5728\u5b9e\u9645\u6b65\u9aa4\u4e0a\u5f00\u73a9\u7b11, \u90a3\u6837\u4e5f\u8bb8\u4f1a\u6bc1\u4e86\u4f7f\u7528\u8005\u7684\u8bbe\u7f6e, \u6709\u4e9b\u53ef\u601c\u7684\u5446\u74dc\u4f1a\u628a\u5b83\u5f53\u6210\u771f\u7684\u6307\u4ee4. \u8bd5\u63a2\u6027\u7684\u53cd\u95ee\u4ee5\u5f15\u51fa\u66f4\u591a\u7684\u7ec6\u8282. \u5982\u679c\u4f60\u505a\u5f97\u597d, \u63d0\u95ee\u8005\u53ef\u4ee5\u5b66\u5230\u70b9\u4e1c\u897f, \u4f60\u4e5f\u53ef\u4ee5. \u8bd5\u8bd5\u5c06\u8822\u95ee\u9898\u8f6c\u53d8\u6210\u597d\u95ee\u9898, \u522b\u5fd8\u4e86\u6211\u4eec\u90fd\u66fe\u662f\u65b0\u624b. \u5c3d\u7ba1\u5bf9\u90a3\u4e9b\u61d2\u866b\u62b1\u6028\u4e00\u58f0 RTFM \u662f\u6b63\u5f53\u7684, \u80fd\u6307\u51fa\u6587\u4ef6\u7684\u4f4d\u7f6e(\u5373\u4f7f\u53ea\u662f\u5efa\u8bae\u4e2a Google \u641c\u7d22\u5173\u952e\u8bcd)\u4f1a\u66f4\u597d. \u5982\u679c\u4f60\u51b3\u5b9a\u56de\u7b54, \u5c31\u8bf7\u7ed9\u51fa\u597d\u7684\u7b54\u6848. \u5f53\u522b\u4eba\u6b63\u5728\u7528\u9519\u8bef\u7684\u5de5\u5177\u6216\u65b9\u6cd5\u65f6\u522b\u5efa\u8bae\u7b28\u62d9\u7684\u6743\u5b9c\u4e4b\u8ba1(workaround), \u5e94\u63a8\u8350\u66f4\u597d\u7684\u5de5\u5177, \u91cd\u65b0\u754c\u5b9a\u95ee\u9898. \u6b63\u9762\u7684\u56de\u7b54\u95ee\u9898! \u5982\u679c\u8fd9\u4e2a\u63d0\u95ee\u8005\u5df2\u7ecf\u5f88\u6df1\u5165\u7684\u7814\u7a76\u800c\u4e14\u4e5f\u8868\u660e\u5df2\u7ecf\u8bd5\u8fc7 X, Y, Z, A, B, C \u4f46\u6ca1\u5f97\u5230\u7ed3\u679c, \u56de\u7b54 \u8bd5\u8bd5\u770b A \u6216\u662f B \u6216\u8005 \u8bd5\u8bd5 X, Y, Z, A, B, C \u5e76\u9644\u4e0a\u4e00\u4e2a\u94fe\u63a5\u4e00\u70b9\u7528\u90fd\u6ca1\u6709. \u5e2e\u52a9\u4f60\u7684\u793e\u533a\u4ece\u95ee\u9898\u4e2d\u5b66\u4e60. \u5f53\u56de\u590d\u4e00\u4e2a\u597d\u95ee\u9898\u65f6, \u95ee\u95ee\u81ea\u5df1 \u5982\u4f55\u4fee\u6539\u76f8\u5173\u6587\u4ef6\u6216\u5e38\u89c1\u95ee\u9898\u6587\u4ef6\u4ee5\u514d\u518d\u6b21\u89e3\u7b54\u540c\u6837\u7684\u95ee\u9898\uff1f , \u63a5\u7740\u518d\u5411\u6587\u4ef6\u7ef4\u62a4\u8005\u53d1\u4e00\u4efd\u8865\u4e01. \u5982\u679c\u4f60\u662f\u5728\u7814\u7a76\u4e00\u756a\u540e\u624d\u505a\u51fa\u7684\u56de\u7b54, \u5c55\u73b0\u4f60\u7684\u6280\u5de7\u800c\u4e0d\u662f\u76f4\u63a5\u7aef\u51fa\u7ed3\u679c. \u6bd5\u7adf \u6388\u4eba\u4ee5\u9c7c\u4e0d\u5982\u6388\u4eba\u4ee5\u6e14 . \u63a8\u8350\u9605\u8bfb \u5982\u4f55\u6709\u6548\u5730\u62a5\u544aBug","title":"\u5982\u4f55\u6b63\u786e\u63d0\u95ee"},{"location":"talk/ask_question/#_1","text":"\u8fd9\u7bc7\u6587\u7ae0\u6700\u65e9\u662f\u597d\u53cbfxd\u4e8e2016\u5e74\u63a8\u8350\u7684, \u5b83\u5728\u6211\u521a\u5ff5\u5927\u5b66\u65f6\u5e2e\u52a9\u6211\u517b\u6210\u4e86\u826f\u597d\u7684\u63d0\u95ee\u4e60\u60ef, \u4e0d\u4ec5\u5982\u6b64, \u5728\u9047\u5230\u56f0\u96be\u65f6\u6211\u4e5f\u4f1a\u65f6\u4e0d\u65f6\u7ffb\u51fa\u6765\u8bfb, \u6709\u5947\u6548. \u73b0\u5728\u662f2021\u5e749\u67084\u65e5, \u5728\u8fd9\u4e2a\u975e\u5e38\u65e0\u804a\u7684\u5468\u672b, \u6211\u518d\u6b21\u7ffb\u51fa\u4e86\u5b83, \u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b, \u65b9\u4fbf\u81ea\u5df1\u67e5\u9605. \u8fd9\u7bc7\u6587\u7ae0\u7684\u539f\u94fe\u63a5\u5728\u8fd9\u91cc: \u63d0\u95ee\u7684\u667a\u6167 \u975e\u5e38\u5e86\u5e78\u80fd\u8bfb\u5230\u8fd9\u6837\u7684\u597d\u6587.","title":"\u63d0\u95ee\u7684\u667a\u6167"},{"location":"talk/ask_question/#_2","text":"\u5f53\u6211\u4eec\u62cb\u51fa\u4e00\u4e2a\u6280\u672f\u95ee\u9898\u65f6, \u6700\u7ec8\u662f\u5426\u80fd\u5f97\u5230\u6709\u7528\u7684\u56de\u7b54, \u5f80\u5f80\u53d6\u51b3\u4e8e\u6211\u4eec\u6240\u63d0\u95ee\u548c\u8ffd\u95ee\u7684\u65b9\u5f0f. \u8fd9\u7bc7\u6587\u7ae0\u5c06\u6559\u4f1a\u6211\u4eec\u5982\u4f55\u63d0\u51fa\u597d\u7684\u95ee\u9898, \u66f4\u597d\u5730\u83b7\u5f97\u6211\u4eec\u60f3\u8981\u7684\u5e2e\u52a9. \u9996\u5148\u8981\u660e\u786e\u7684\u662f, \u9ad8\u624b\u90fd\u559c\u6b22\u6709\u6311\u6218\u6027\u7684\u95ee\u9898, \u6216\u8005\u80fd\u6fc0\u53d1\u4ed6\u4eec\u601d\u7ef4\u7684\u597d\u95ee\u9898. \u597d\u95ee\u9898\u662f\u6fc0\u52b1, \u662f\u539a\u793c, \u80fd\u8ba9\u4eba\u6709\u56de\u7b54\u95ee\u9898\u7684\u70ed\u60c5. \u6b63\u56e0\u5982\u6b64, \u9ad8\u624b\u4e5f\u4e0d\u4f1a\u5728\u767d\u5ad6\u515a\u8eab\u4e0a\u6d6a\u8d39\u4ed6\u4eec\u7684\u65f6\u95f4. \u8bd5\u60f3\u4e00\u4e0b, \u5982\u679c\u4f60\u662f\u4e00\u4e2a\u5927\u795e, \u4f60\u66f4\u613f\u610f\u56de\u7b54\u4ec0\u4e48\u95ee\u9898.","title":"\u7b80\u4ecb"},{"location":"talk/ask_question/#_3","text":"\u5728\u51c6\u5907\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6, \u804a\u5929\u7fa4\u7ec4\u6216\u7f51\u7edc\u8bba\u575b\u63d0\u51fa\u95ee\u9898\u524d, \u8bf7\u5148\u505a\u5230\u4ee5\u4e0b\u4e8b\u60c5: \u5c1d\u8bd5\u5728\u4f60\u51c6\u5907\u63d0\u95ee\u7684\u8bba\u575b\u7684\u65e7\u6587\u7ae0\u4e2d\u641c\u7d22\u7b54\u6848. \u5c1d\u8bd5\u4e0a\u7f51\u641c\u7d22\u4ee5\u627e\u5230\u7b54\u6848. \u5c1d\u8bd5\u9605\u8bfb\u624b\u518c\u4ee5\u627e\u5230\u7b54\u6848. \u5c1d\u8bd5\u9605\u8bfb\u5e38\u89c1\u95ee\u9898\u6587\u4ef6(FAQ)\u4ee5\u627e\u5230\u7b54\u6848. \u5c1d\u8bd5\u81ea\u5df1\u68c0\u67e5\u6216\u8bd5\u9a8c\u4ee5\u627e\u5230\u7b54\u6848. \u5411\u4f60\u8eab\u8fb9\u7684\u5f3a\u8005\u670b\u53cb\u6253\u542c\u4ee5\u627e\u5230\u7b54\u6848. \u5982\u679c\u4f60\u662f\u7a0b\u5e8f\u5f00\u53d1\u8005, \u8bf7\u5c1d\u8bd5\u9605\u8bfb\u6e90\u4ee3\u7801\u4ee5\u627e\u5230\u7b54\u6848.","title":"\u5728\u63d0\u95ee\u4e4b\u524d"},{"location":"talk/ask_question/#_4","text":"","title":"\u5f53\u4f60\u63d0\u95ee\u65f6"},{"location":"talk/ask_question/#_5","text":"\u5c0f\u5fc3\u9009\u62e9\u4f60\u8981\u63d0\u95ee\u7684\u573a\u5408. \u5982\u679c\u4f60\u505a\u4e86\u4e0b\u8ff0\u7684\u4e8b\u60c5, \u4f60\u5f88\u53ef\u80fd\u88ab\u5ffd\u7565\u6389\u6216\u8005\u88ab\u770b\u4f5c\u5931\u8d25\u8005: \u5728\u4e0e\u4e3b\u9898\u4e0d\u5408\u7684\u8bba\u575b\u4e0a\u8d34\u51fa\u4f60\u7684\u95ee\u9898. \u5728\u63a2\u8ba8\u8fdb\u9636\u6280\u672f\u95ee\u9898\u7684\u8bba\u575b\u5f20\u8d34\u975e\u5e38\u521d\u7ea7\u7684\u95ee\u9898\uff1b\u53cd\u4e4b\u4ea6\u7136. \u5728\u592a\u591a\u7684\u4e0d\u540c\u65b0\u95fb\u7fa4\u7ec4\u4e0a\u91cd\u590d\u8f6c\u8d34\u540c\u6837\u7684\u95ee\u9898(cross-post). \u5411\u65e2\u975e\u719f\u4eba\u4e5f\u6ca1\u6709\u4e49\u52a1\u89e3\u51b3\u4f60\u95ee\u9898\u7684\u4eba\u53d1\u9001\u79c1\u4eba\u7535\u90ae. \u4f7f\u7528Google\u641c\u7d22, \u7136\u540e\u5728Stack Exchange\u91cc\u63d0\u95ee\u662f\u4e00\u79cd\u597d\u7684\u7b56\u7565.","title":"\u614e\u9009\u63d0\u95ee\u7684\u8bba\u575b"},{"location":"talk/ask_question/#_6","text":"\u5982\u679c\u95ee\u9898\u63cf\u8ff0\u4e0d\u6e05, \u6216\u662f\u56de\u590d\u9014\u5f84\u4e0d\u65b9\u4fbf, \u90a3\u4e48\u522b\u4eba\u901a\u5e38\u4e5f\u61d2\u5f97\u601d\u8003\u4f60\u63d0\u51fa\u7684\u95ee\u9898. \u4e3a\u4e86\u4f7f\u95ee\u9898\u66f4\u5bb9\u6613\u5f97\u5230\u56de\u590d, \u8bf7\u505a\u597d\u4ee5\u4e0b\u51e0\u70b9: \u7528\u6e05\u6670, \u6b63\u786e, \u7cbe\u51c6\u4e14\u8bed\u6cd5\u6b63\u786e\u7684\u8bed\u53e5 \u4f7f\u7528\u6613\u4e8e\u8bfb\u53d6\u4e14\u6807\u51c6\u7684\u6587\u4ef6\u683c\u5f0f\u53d1\u9001\u95ee\u9898 \u7cbe\u786e\u5730\u63cf\u8ff0\u95ee\u9898\u5e76\u8a00\u4e4b\u6709\u7269 \u8bdd\u4e0d\u5728\u591a\u800c\u5728\u7cbe \u522b\u52a8\u8f84\u58f0\u79f0\u627e\u5230 Bug \u4f4e\u58f0\u4e0b\u6c14\u4e0d\u80fd\u4ee3\u66ff\u4f60\u7684\u529f\u8bfe \u63cf\u8ff0\u95ee\u9898\u75c7\u72b6\u800c\u975e\u4f60\u7684\u731c\u6d4b \u6309\u53d1\u751f\u65f6\u95f4\u5148\u540e\u5217\u51fa\u95ee\u9898\u75c7\u72b6 \u63cf\u8ff0\u76ee\u6807\u800c\u4e0d\u662f\u8fc7\u7a0b, \u5148\u63cf\u8ff0\u76ee\u6807, \u518d\u9648\u8ff0\u9047\u5230\u95ee\u9898\u7684\u6b65\u9aa4 \u522b\u8981\u6c42\u4f7f\u7528\u79c1\u4eba\u7535\u90ae\u56de\u590d, \u8ba9\u56de\u590d\u8005\u6765\u51b3\u5b9a\u662f\u5426\u79c1\u4e0b\u56de\u590d \u6e05\u695a\u660e\u786e\u7684\u8868\u8fbe\u4f60\u7684\u95ee\u9898\u4ee5\u53ca\u9700\u6c42 \u5373\u4f7f\u4f60\u5f88\u6025\u4e5f\u4e0d\u8981\u5728\u6807\u9898\u5199\u7d27\u6025","title":"\u4f7f\u95ee\u9898\u5bb9\u6613\u56de\u590d"},{"location":"talk/ask_question/#_7","text":"STFW: Search the fucking web RTFM: Read the fucking manual RTFSC: Read the fucking source code","title":"\u89e3\u51b3\u95ee\u9898\u7684\u5e38\u7528\u7b56\u7565"},{"location":"talk/ask_question/#_8","text":"\u6001\u5ea6\u548c\u5584\u4e00\u70b9 . \u95ee\u9898\u5e26\u6765\u7684\u538b\u529b\u5e38\u4f7f\u4eba\u663e\u5f97\u65e0\u793c\u6216\u611a\u8822, \u5176\u5b9e\u5e76\u4e0d\u662f\u8fd9\u6837. \u5bf9\u521d\u72af\u8005\u79c1\u4e0b\u56de\u590d . \u5bf9\u90a3\u4e9b\u5766\u8bda\u72af\u9519\u4e4b\u4eba\u6ca1\u6709\u5fc5\u8981\u5f53\u4f17\u7f9e\u8fb1, \u4e00\u4e2a\u771f\u6b63\u7684\u65b0\u624b\u4e5f\u8bb8\u8fde\u600e\u4e48\u641c\u7d22\u6216\u5728\u54ea\u627e\u5e38\u89c1\u95ee\u9898\u90fd\u4e0d\u77e5\u9053. \u5982\u679c\u4f60\u4e0d\u786e\u5b9a, \u4e00\u5b9a\u8981\u8bf4\u51fa\u6765! \u4e00\u4e2a\u542c\u8d77\u6765\u6743\u5a01\u7684\u9519\u8bef\u56de\u590d\u6bd4\u6ca1\u6709\u8fd8\u8981\u7cdf, \u522b\u56e0\u4e3a\u542c\u8d77\u6765\u50cf\u4e2a\u4e13\u5bb6\u5f88\u597d\u73a9, \u5c31\u7ed9\u522b\u4eba\u4e71\u6307\u8def. \u8981\u8c26\u865a\u548c\u8bda\u5b9e, \u7ed9\u63d0\u95ee\u8005\u4e0e\u540c\u884c\u90fd\u6811\u4e2a\u597d\u699c\u6837. \u5982\u679c\u5e2e\u4e0d\u4e86\u5fd9, \u4e5f\u522b\u59a8\u788d\u4ed6. \u4e0d\u8981\u5728\u5b9e\u9645\u6b65\u9aa4\u4e0a\u5f00\u73a9\u7b11, \u90a3\u6837\u4e5f\u8bb8\u4f1a\u6bc1\u4e86\u4f7f\u7528\u8005\u7684\u8bbe\u7f6e, \u6709\u4e9b\u53ef\u601c\u7684\u5446\u74dc\u4f1a\u628a\u5b83\u5f53\u6210\u771f\u7684\u6307\u4ee4. \u8bd5\u63a2\u6027\u7684\u53cd\u95ee\u4ee5\u5f15\u51fa\u66f4\u591a\u7684\u7ec6\u8282. \u5982\u679c\u4f60\u505a\u5f97\u597d, \u63d0\u95ee\u8005\u53ef\u4ee5\u5b66\u5230\u70b9\u4e1c\u897f, \u4f60\u4e5f\u53ef\u4ee5. \u8bd5\u8bd5\u5c06\u8822\u95ee\u9898\u8f6c\u53d8\u6210\u597d\u95ee\u9898, \u522b\u5fd8\u4e86\u6211\u4eec\u90fd\u66fe\u662f\u65b0\u624b. \u5c3d\u7ba1\u5bf9\u90a3\u4e9b\u61d2\u866b\u62b1\u6028\u4e00\u58f0 RTFM \u662f\u6b63\u5f53\u7684, \u80fd\u6307\u51fa\u6587\u4ef6\u7684\u4f4d\u7f6e(\u5373\u4f7f\u53ea\u662f\u5efa\u8bae\u4e2a Google \u641c\u7d22\u5173\u952e\u8bcd)\u4f1a\u66f4\u597d. \u5982\u679c\u4f60\u51b3\u5b9a\u56de\u7b54, \u5c31\u8bf7\u7ed9\u51fa\u597d\u7684\u7b54\u6848. \u5f53\u522b\u4eba\u6b63\u5728\u7528\u9519\u8bef\u7684\u5de5\u5177\u6216\u65b9\u6cd5\u65f6\u522b\u5efa\u8bae\u7b28\u62d9\u7684\u6743\u5b9c\u4e4b\u8ba1(workaround), \u5e94\u63a8\u8350\u66f4\u597d\u7684\u5de5\u5177, \u91cd\u65b0\u754c\u5b9a\u95ee\u9898. \u6b63\u9762\u7684\u56de\u7b54\u95ee\u9898! \u5982\u679c\u8fd9\u4e2a\u63d0\u95ee\u8005\u5df2\u7ecf\u5f88\u6df1\u5165\u7684\u7814\u7a76\u800c\u4e14\u4e5f\u8868\u660e\u5df2\u7ecf\u8bd5\u8fc7 X, Y, Z, A, B, C \u4f46\u6ca1\u5f97\u5230\u7ed3\u679c, \u56de\u7b54 \u8bd5\u8bd5\u770b A \u6216\u662f B \u6216\u8005 \u8bd5\u8bd5 X, Y, Z, A, B, C \u5e76\u9644\u4e0a\u4e00\u4e2a\u94fe\u63a5\u4e00\u70b9\u7528\u90fd\u6ca1\u6709. \u5e2e\u52a9\u4f60\u7684\u793e\u533a\u4ece\u95ee\u9898\u4e2d\u5b66\u4e60. \u5f53\u56de\u590d\u4e00\u4e2a\u597d\u95ee\u9898\u65f6, \u95ee\u95ee\u81ea\u5df1 \u5982\u4f55\u4fee\u6539\u76f8\u5173\u6587\u4ef6\u6216\u5e38\u89c1\u95ee\u9898\u6587\u4ef6\u4ee5\u514d\u518d\u6b21\u89e3\u7b54\u540c\u6837\u7684\u95ee\u9898\uff1f , \u63a5\u7740\u518d\u5411\u6587\u4ef6\u7ef4\u62a4\u8005\u53d1\u4e00\u4efd\u8865\u4e01. \u5982\u679c\u4f60\u662f\u5728\u7814\u7a76\u4e00\u756a\u540e\u624d\u505a\u51fa\u7684\u56de\u7b54, \u5c55\u73b0\u4f60\u7684\u6280\u5de7\u800c\u4e0d\u662f\u76f4\u63a5\u7aef\u51fa\u7ed3\u679c. \u6bd5\u7adf \u6388\u4eba\u4ee5\u9c7c\u4e0d\u5982\u6388\u4eba\u4ee5\u6e14 .","title":"\u5982\u4f55\u66f4\u597d\u5730\u56de\u7b54\u95ee\u9898"},{"location":"talk/ask_question/#_9","text":"\u5982\u4f55\u6709\u6548\u5730\u62a5\u544aBug","title":"\u63a8\u8350\u9605\u8bfb"},{"location":"tools/git_command/","text":"Git\u5e38\u7528\u547d\u4ee4\u603b\u7ed3 \u57fa\u7840\u6d41\u7a0b \u521b\u5efagit\u4ed3\u5e93 git init \u514b\u9686\u4e00\u4e2a\u4ed3\u5e93 git clone <path> \u6dfb\u52a0\u6539\u52a8\u5230stage git add * \u63d0\u4ea4\u6539\u52a8\u5230HEAD git commit -m \"commit message\" \u5c06\u6539\u52a8\u63a8\u9001\u5230\u8fdc\u7aef\u4ed3\u5e93\u7684main\u5206\u652f, main\u53ef\u4ee5\u66ff\u6362\u4e3a\u5176\u4ed6\u5206\u652f\u540d\u79f0 git push origin main \u66f4\u65b0\u672c\u5730\u4ed3\u5e93\u81f3\u6700\u65b0\u6539\u52a8 git pull \u7248\u672c\u63a7\u5236 \u83b7\u53d6\u63d0\u4ea4ID git log \u7ed9\u63d0\u4ea4ID\u521b\u5efa\u6807\u7b7e(example id: 1b2e1d63ff) git tag 1.0 1b2e1d63ff \u67e5\u770b\u547d\u4ee4\u5386\u53f2 git reflog \u56de\u9000\u5230\u6700\u65b0\u7684\u6539\u52a8 git reset --hard HEAD \u56de\u9000\u5230\u6700\u65b0\u6539\u52a8\u7684\u4e0a\u4e00\u6b21\u6539\u52a8 git reset --hard HEAD^ \u56de\u9000\u5230\u67d0\u4e00\u6b21\u6539\u52a8 git reset --hard <commit_id> \u5206\u652f\u5f00\u53d1 \u521b\u5efa\u5206\u652f git branch <branch_name> \u67e5\u770b\u5f53\u524d\u5206\u652f git branch \u5207\u6362\u5230\u67d0\u4e00\u4e2a\u5206\u652f git switch -c <branch_name> \u5408\u5e76\u67d0\u5206\u652f\u5230\u5f53\u524d\u5206\u652f git merge <branch_name> \u5220\u9664\u5206\u652f git branch -d <branch_name>","title":"Git\u5e38\u7528\u547d\u4ee4"},{"location":"tools/git_command/#git","text":"","title":"Git\u5e38\u7528\u547d\u4ee4\u603b\u7ed3"},{"location":"tools/git_command/#_1","text":"\u521b\u5efagit\u4ed3\u5e93 git init \u514b\u9686\u4e00\u4e2a\u4ed3\u5e93 git clone <path> \u6dfb\u52a0\u6539\u52a8\u5230stage git add * \u63d0\u4ea4\u6539\u52a8\u5230HEAD git commit -m \"commit message\" \u5c06\u6539\u52a8\u63a8\u9001\u5230\u8fdc\u7aef\u4ed3\u5e93\u7684main\u5206\u652f, main\u53ef\u4ee5\u66ff\u6362\u4e3a\u5176\u4ed6\u5206\u652f\u540d\u79f0 git push origin main \u66f4\u65b0\u672c\u5730\u4ed3\u5e93\u81f3\u6700\u65b0\u6539\u52a8 git pull","title":"\u57fa\u7840\u6d41\u7a0b"},{"location":"tools/git_command/#_2","text":"\u83b7\u53d6\u63d0\u4ea4ID git log \u7ed9\u63d0\u4ea4ID\u521b\u5efa\u6807\u7b7e(example id: 1b2e1d63ff) git tag 1.0 1b2e1d63ff \u67e5\u770b\u547d\u4ee4\u5386\u53f2 git reflog \u56de\u9000\u5230\u6700\u65b0\u7684\u6539\u52a8 git reset --hard HEAD \u56de\u9000\u5230\u6700\u65b0\u6539\u52a8\u7684\u4e0a\u4e00\u6b21\u6539\u52a8 git reset --hard HEAD^ \u56de\u9000\u5230\u67d0\u4e00\u6b21\u6539\u52a8 git reset --hard <commit_id>","title":"\u7248\u672c\u63a7\u5236"},{"location":"tools/git_command/#_3","text":"\u521b\u5efa\u5206\u652f git branch <branch_name> \u67e5\u770b\u5f53\u524d\u5206\u652f git branch \u5207\u6362\u5230\u67d0\u4e00\u4e2a\u5206\u652f git switch -c <branch_name> \u5408\u5e76\u67d0\u5206\u652f\u5230\u5f53\u524d\u5206\u652f git merge <branch_name> \u5220\u9664\u5206\u652f git branch -d <branch_name>","title":"\u5206\u652f\u5f00\u53d1"},{"location":"tools/gitbook/","text":"GitBook\u4f7f\u7528\u7b80\u6613\u6307\u5357","title":"\u4f7f\u7528GitBook\u5199\u4f5c"},{"location":"tools/gitbook/#gitbook","text":"","title":"GitBook\u4f7f\u7528\u7b80\u6613\u6307\u5357"},{"location":"tools/verilog_on_mac/","text":"Verilog on MacOS \u51c6\u5907 \u4e3a\u4e86\u5728macOS\u4e0a\u5b8c\u6210\u7b80\u5355\u7684Verilog\u4eff\u771f\u53ca\u7efc\u5408, \u9996\u5148\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5185\u5bb9: iverilog Scansion yosys graphviz \u5176\u4e2diverilog, yosys\u548cgraphviz\u53ef\u4ee5\u901a\u8fc7Homebrew\u5b89\u88c5, Scansion\u53ef\u4ee5\u5728 \u5176\u5b98\u7f51 \u4e0b\u8f7d\u5e76\u5b89\u88c5. \u4eff\u771f\u6d41\u7a0b iverilog\u548cScansion\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e, \u901a\u8fc7Makefile\u811a\u672c\u5316\u4eff\u771f\u6d41\u7a0b. Makefile\u793a\u4f8b\u811a\u672c\u5982\u4e0b: RC=\"Adder32_1\" TB =\"Adder32_1_tb\" all: iverilog -o wave $(SRC).v $(TB).v vvp -n wave open -a Scansion wave.vcd \u5f53\u6587\u4ef6\u8f83\u591a\u65f6, \u53ef\u4ee5\u5c06\u6240\u6709\u6587\u4ef6\u540d\u5199\u5728filelist.f\u4e2d, \u4f7f\u7528-f\u547d\u4ee4\u7f16\u8bd1 \u4e3a\u4e86\u751f\u6210\u6ce2\u5f62, \u9700\u8981\u5728testbench\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801: /*iverilog */ initial begin $dumpfile(\"wave.vcd\"); //\u751f\u6210\u7684vcd\u6587\u4ef6\u540d\u79f0 $dumpvars(0, led_demo_tb); //tb\u6a21\u5757\u540d\u79f0 end /*iverilog */ \u5982\u679c\u4e0d\u52a0\u8fd9\u51e0\u884civerilog\u7f16\u8bd1\u5668\u4e13\u7528\u7684\u8bed\u53e5, \u5c06\u65e0\u6cd5\u751f\u6210wave.vcd\u6ce2\u5f62. \u5b8c\u6210\u540e, \u5728\u5de5\u7a0b\u76ee\u5f55\u4e0b\u8f93\u5165 make \u5373\u53ef\u6253\u5f00Scansion\u754c\u9762, \u4e4b\u540e\u4fbf\u53ef\u4ee5\u6dfb\u52a0\u4fe1\u53f7\u67e5\u770b\u6ce2\u5f62\u4e86. \u6ce8\uff1a\u5728\u7ec8\u7aef\u8f93\u5165 iverilog \u56de\u8f66, \u53ef\u4ee5\u770b\u5230\u5e38\u7528\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u7684\u7b80\u5355\u4ecb\u7ecd. \u53e6\u5916, iverilog\u8fd8\u53ef\u4ee5\u628a\u7528Verilog HDL\u7f16\u5199\u7684.v\u6587\u4ef6\u8f6c\u6362\u6210VHDL\u8bed\u8a00\u7f16\u5199\u7684.vhd\u6587\u4ef6, \u4f7f\u7528\u547d\u4ee4 iverilog -tvhdl -o test.vhd test.v \u7efc\u5408 \u9996\u5148\u7f16\u5199\u4ee5\u4e0b\u7efc\u5408\u547d\u4ee4: # read design read_verilog counter.v hierarchy -top counter # high-level synthesis proc; opt; fsm; opt; memory; opt; #techmap; opt; write_verilog synth.v \u5c06\u4e0a\u8ff0\u547d\u4ee4\u4fdd\u5b58\u4e3ashow_rtl.ys\u6587\u4ef6, \u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u547d\u4ee4\u5b8c\u6210\u7efc\u5408. yosys show_rtl.ys \u7efc\u5408\u5b8c\u6210\u540e\u4f1a\u751f\u6210synth.v\u6587\u4ef6, \u8fd9\u662f\u7efc\u5408\u540e\u7684\u7f51\u8868. \u751f\u6210dot\u6587\u4ef6: yosys -p \"prep; show -stretch -prefix counter -format dot\" counter.v \u751f\u6210png\u56fe\u7247: dot counter.dot -T png -o counter.png \u603b\u7ed3 \u57fa\u4e8e\u4ee5\u4e0a\u76f8\u5173\u5de5\u5177, \u4fbf\u53ef\u4ee5\u5728macOS\u4e0a\u5199\u4e00\u70b9\u7b80\u5355\u7684verilog, \u7528\u4e8e\u9a8c\u8bc1\u4e00\u4e9b\u5c0f\u7684idea\u8fd8\u662f\u975e\u5e38\u65b9\u4fbf\u7684.","title":"Verilog on macOS"},{"location":"tools/verilog_on_mac/#verilog-on-macos","text":"","title":"Verilog on MacOS"},{"location":"tools/verilog_on_mac/#_1","text":"\u4e3a\u4e86\u5728macOS\u4e0a\u5b8c\u6210\u7b80\u5355\u7684Verilog\u4eff\u771f\u53ca\u7efc\u5408, \u9996\u5148\u9700\u8981\u5b89\u88c5\u4ee5\u4e0b\u5185\u5bb9: iverilog Scansion yosys graphviz \u5176\u4e2diverilog, yosys\u548cgraphviz\u53ef\u4ee5\u901a\u8fc7Homebrew\u5b89\u88c5, Scansion\u53ef\u4ee5\u5728 \u5176\u5b98\u7f51 \u4e0b\u8f7d\u5e76\u5b89\u88c5.","title":"\u51c6\u5907"},{"location":"tools/verilog_on_mac/#_2","text":"iverilog\u548cScansion\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e, \u901a\u8fc7Makefile\u811a\u672c\u5316\u4eff\u771f\u6d41\u7a0b. Makefile\u793a\u4f8b\u811a\u672c\u5982\u4e0b: RC=\"Adder32_1\" TB =\"Adder32_1_tb\" all: iverilog -o wave $(SRC).v $(TB).v vvp -n wave open -a Scansion wave.vcd \u5f53\u6587\u4ef6\u8f83\u591a\u65f6, \u53ef\u4ee5\u5c06\u6240\u6709\u6587\u4ef6\u540d\u5199\u5728filelist.f\u4e2d, \u4f7f\u7528-f\u547d\u4ee4\u7f16\u8bd1 \u4e3a\u4e86\u751f\u6210\u6ce2\u5f62, \u9700\u8981\u5728testbench\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801: /*iverilog */ initial begin $dumpfile(\"wave.vcd\"); //\u751f\u6210\u7684vcd\u6587\u4ef6\u540d\u79f0 $dumpvars(0, led_demo_tb); //tb\u6a21\u5757\u540d\u79f0 end /*iverilog */ \u5982\u679c\u4e0d\u52a0\u8fd9\u51e0\u884civerilog\u7f16\u8bd1\u5668\u4e13\u7528\u7684\u8bed\u53e5, \u5c06\u65e0\u6cd5\u751f\u6210wave.vcd\u6ce2\u5f62. \u5b8c\u6210\u540e, \u5728\u5de5\u7a0b\u76ee\u5f55\u4e0b\u8f93\u5165 make \u5373\u53ef\u6253\u5f00Scansion\u754c\u9762, \u4e4b\u540e\u4fbf\u53ef\u4ee5\u6dfb\u52a0\u4fe1\u53f7\u67e5\u770b\u6ce2\u5f62\u4e86. \u6ce8\uff1a\u5728\u7ec8\u7aef\u8f93\u5165 iverilog \u56de\u8f66, \u53ef\u4ee5\u770b\u5230\u5e38\u7528\u53c2\u6570\u4f7f\u7528\u65b9\u6cd5\u7684\u7b80\u5355\u4ecb\u7ecd. \u53e6\u5916, iverilog\u8fd8\u53ef\u4ee5\u628a\u7528Verilog HDL\u7f16\u5199\u7684.v\u6587\u4ef6\u8f6c\u6362\u6210VHDL\u8bed\u8a00\u7f16\u5199\u7684.vhd\u6587\u4ef6, \u4f7f\u7528\u547d\u4ee4 iverilog -tvhdl -o test.vhd test.v","title":"\u4eff\u771f\u6d41\u7a0b"},{"location":"tools/verilog_on_mac/#_3","text":"\u9996\u5148\u7f16\u5199\u4ee5\u4e0b\u7efc\u5408\u547d\u4ee4: # read design read_verilog counter.v hierarchy -top counter # high-level synthesis proc; opt; fsm; opt; memory; opt; #techmap; opt; write_verilog synth.v \u5c06\u4e0a\u8ff0\u547d\u4ee4\u4fdd\u5b58\u4e3ashow_rtl.ys\u6587\u4ef6, \u5728\u7ec8\u7aef\u4e0b\u6267\u884c\u547d\u4ee4\u5b8c\u6210\u7efc\u5408. yosys show_rtl.ys \u7efc\u5408\u5b8c\u6210\u540e\u4f1a\u751f\u6210synth.v\u6587\u4ef6, \u8fd9\u662f\u7efc\u5408\u540e\u7684\u7f51\u8868. \u751f\u6210dot\u6587\u4ef6: yosys -p \"prep; show -stretch -prefix counter -format dot\" counter.v \u751f\u6210png\u56fe\u7247: dot counter.dot -T png -o counter.png","title":"\u7efc\u5408"},{"location":"tools/verilog_on_mac/#_4","text":"\u57fa\u4e8e\u4ee5\u4e0a\u76f8\u5173\u5de5\u5177, \u4fbf\u53ef\u4ee5\u5728macOS\u4e0a\u5199\u4e00\u70b9\u7b80\u5355\u7684verilog, \u7528\u4e8e\u9a8c\u8bc1\u4e00\u4e9b\u5c0f\u7684idea\u8fd8\u662f\u975e\u5e38\u65b9\u4fbf\u7684.","title":"\u603b\u7ed3"}]}